//watcher



var net = require('net');
var fs=require('fs');

var HOST = '192.168.25.1';
var PORT = 8080;
    
var client = new net.Socket();

    client.connect(PORT, HOST, function(err) {
        if(!err){
        var data= "hello";
        console.log('CONNECTED TO: ' + HOST + ':' + PORT);
        // Write a message to the socket as soon as the client is connected, the server will receive it as message from the client 
    
        client.write(data);
    
        }

    });

    // Add a 'data' event handler for the client socket
    // data is what the server sent to this socket
    client.on('data', function(data,err) {
        
        console.log('DATA: ' + data);
        // Close the client socket completely
       var fs = require("fs");
//console.log(data);
 var StringDecoder = require('string_decoder').StringDecoder;
var decoder = new StringDecoder('utf8');
var ddata=decoder.write(data);
        
fs.watch(ddata, { persistent: true }, function (event, fileName) {
  console.log("started watching"+fileName);  
  var path= "F:\\test2\\"+fileName;
  console.log("Event: " + event + path );
  console.log(path + "\n");
  
 var changedFileSize = readFileSize(path);
   readfile(fileName,changedFileSize);  
 updateFileSize(changedFileSize,fileName);
 
 //var readData = readfile(fileName,fileSize);
 
    //readDb(fileName);
 // serverConn(readData);
  //start(path,event);
  
});
                    
        
        
        
        
        
        
        
        
        client.destroy();
        
    });

    // Add a 'close' event handler for the client socket
    client.on('close', function(err) {
        if(err){
        console.log('Connection closed');
        }
    });
    //console.log('Line: ' + data);



                                





function serverConn(data){

var fs = require("fs");
console.log(data)  ;
fs.watch(data.decode, { persistent: true }, function (event, fileName) {
  console.log("started watching"+data);  
  var path= "F:\\test2\\"+fileName;
  console.log("Event: " + event + path /*+ fileSizeInBytes*/);
  console.log(fileName + "\n");
  
 var changedFileSize = readFileSize(path);
   readfile(fileName,changedFileSize);  
 updateFileSize(changedFileSize,fileName);
 
 //var readData = readfile(fileName,fileSize);
 
    //readDb(fileName);
 // serverConn(readData);
  //start(path,event);
  
});
                    }

//read file size
 function readFileSize(path){
 var fs = require("fs"); //Load the filesystem module
 var stats = fs.statSync(path);
 var fileSizeInBytes = stats["size"];
 console.log('file size =' + fileSizeInBytes);
 return fileSizeInBytes;
 }
 
 
//create db connection 
function updateFileSize(changedFileSize,fileName){
    var mysql = require('mysql');
 
var connection = mysql.createConnection(
    {
      host     : 'localhost',
      user     : 'root',
      password : '',
      database : 'clientdb',
    }
);
 
connection.connect();
//var updateRecord= 'UPDATE FILE SET size =:size where name=:name',{size=ChangedFileSize,name=fileName};
connection.query("UPDATE FILE SET size = " + mysql.escape(changedFileSize) +" where name="+ mysql.escape(fileName) , function(err,rows, fields){
if (err) throw err;
console.log("record updated");
 });
var queryString = 'SELECT * FROM file';
 //connection.quert(insertRecord,function(err,
 connection.query(queryString, function(err, rows, fields) {
    if (err) throw err;
 
    for (var i in rows) {
        console.log('Changed file size ', rows[i].size);}
        var kalinSize=rows[i].size;
        console.log(kalinSize);
        //callback(kalinSize);
       

    
});
 
connection.end();}
//var x=function(kalinSize)
 //{
 //console.log(kalinSize +"d");
 //}
            

 
 
 
//update file size in db  
function readfile(fileName,changedFileSize){
     var mysql = require('mysql');
 
var connection = mysql.createConnection(
    {
      host     : 'localhost',
      user     : 'root',
      password : '',
      database : 'clientdb',
    }
);
 

var queryString = "SELECT size FROM file where name="+ mysql.escape(fileName); 
console.log(queryString); 
connection.query(queryString, function(err, rows, fields) {
    if (err) throw err;
 
    for (var i in rows) {
        console.log('Changed file size ', rows[i].size);}
        var kalinSize=rows[i].size;
        console.log(kalinSize);
        connection.end();
        
    
    var fs = require("fs");
    fs.exists(fileName, function (exists) {
        if (exists) {
            fs.stat(fileName, function (error, stats) {
                fs.open(fileName, "r", function (error, fd) {
                    var buffer = new Buffer(stats.size-kalinSize ); //buffer hvn file size nt required
					   console.log(kalinSize+"fs");
    fs.read(fd, buffer, 0, buffer.length, kalinSize, function (error, bytesRead, buffer) {//fs.read(fd, buffer, offset, length, position, callback); 
                var data = buffer.toString("utf8", 0, buffer.length);
                        console.log(data+"\n");
						 //serverConn(data);
                       //var data1=toString(data);
                        console.log(data);
                    
                    
    var net = require('net');
    var HOST = '192.168.25.1';
    var PORT = 8080;
    var client = new net.Socket();
    client.connect(PORT, HOST);//, function(err,data) {
        //if(err || !data1){console.log("dont goto hell");}
	   //var a=data;
                         //else{
    console.log('CONNECTED TO: ' + HOST + ':' + PORT);
    console.log(data+"*");
    client.write(data);// Write a message to the socket as soon as the client is connected, the server will receive it as message from the client 
                        
                         //}
    console.log("\n data sent to server");
                    //}                      //);
                                                                                        }
                );
                                                                    }
                       );
        
                                                            } 
                   );
 
                        }                   }
                    );                                              
                                                            }
                );
                                            }
 

//send data to server 
function serverConn(reaadData) {
   var net = require('net');
    var HOST = '192.168.25.1';
    var PORT = 80;
    
    var client = new net.Socket();
client.connect(PORT, HOST, function(reaadData) {
    
	//var a=data;
    console.log('CONNECTED TO: ' + HOST + ':' + PORT);
    console.log(reaadData);
    // Write a message to the socket as soon as the client is connected, the server will receive it as message from the client 
    client.write(reaadData);
	console.log("\n data sent to server");
});


// Add a 'close' event handler for the client socket
client.on('close', function() {
    console.log('Connection closed \n');
});
  console.log('\n Line: ' + reaadData);
}
